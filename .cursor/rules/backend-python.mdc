# 백엔드 개발 가이드라인

## 개발 환경

- **Python Version:** 3.12.10
- **Package Manager:** Poetry
- `poetry`를 사용하여 의존성을 관리하고, `pyproject.toml` 파일에 명시된 라이브러리만 사용해야 합니다.

## 데이터 파이프라인

- **핵심 로직:** CSV 파일 파싱 시, 파일의 1, 2번째 줄 정보를 조합하여 116개의 커스텀 헤더를 생성하고, wide-format 데이터를 long-format으로 변환하여 DB에 저장해야 합니다.
- **상세 구현:** [데이터 파이프라인 설계서](mdc:docs/data_pipeline.md) 참조

## 예측 모델

- **핵심 로직:** 아래의 2단계 접근 방식을 따라야 합니다.
  1.  **규격 기반 불량률(PPM) 계산:** USL/LSL(-0.25/0.25) 규격을 기준으로 예상 부적합 확률을 Z-score를 통해 계산합니다.
  2.  **불량률 추세 분석:** 계산된 예상 불량률의 시간적 변화(기울기)를 분석하여 공정의 악화/안정화 추세를 예측합니다.
- **상세 구현:** [예측 모델 설계서](mdc:docs/prediction_model.md) 참조

## 데이터베이스

- **ORM:** 모든 데이터베이스 상호작용은 `SQLAlchemy`를 사용하여 Oracle과 MariaDB 호환성을 유지해야 합니다.
- **테이블 구조:** 데이터는 `products`, `cam_measurements`, `distribution_analysis`, `alarms` 테이블에 정규화하여 저장합니다.
- **상세 구현:** [데이터베이스 스키마 설계서](mdc:docs/database_schema.md) 참조

- **상세 구현:** [데이터베이스 스키마 설계서](mdc:docs/database_schema.md) 참조

---
