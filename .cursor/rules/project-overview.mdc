---
alwaysApply: true
description: 프로젝트 개요 및 핵심 설계
---

# 프로젝트 개요 및 핵심 설계

본 프로젝트는 캠샤프트 제조 라인의 불량률을 예측하고 실시간으로 알람을 제공하는 시스템을 구축합니다.

## 핵심 기술 스택

- **Backend:** Python 3.12.10 (Poetry), FastAPI
- **Frontend:** Next.js, React Query, AG-Grid, SCSS
- **Database:** Oracle, MariaDB (SQLAlchemy로 호환성 확보)
- **Deployment:** Docker Compose

## 전체 개발 계획

- 상세한 프로젝트의 목표, 기능, 개발 절차는 [개발 계획서](mdc:docs/development_plan.md)를 참조하십시오.

## 상세 설계 문서 링크

- **데이터 처리:** 데이터 수집, 파싱, 변환의 전체 과정은 [데이터 파이프라인 설계서](mdc:docs/data_pipeline.md)를 따릅니다.
- **예측 모델:** 불량률 예측의 핵심 로직과 수학적 원리는 [예측 모델 설계서](mdc:docs/prediction_model.md)에 정의되어 있습니다.
- **API 명세:** 백엔드와 프론트엔드 간의 모든 통신은 [API 명세서](mdc:docs/api_specification.md)를 준수해야 합니다.
- **DB 스키마:** 모든 데이터 저장 구조는 [데이터베이스 스키마 설계서](mdc:docs/database_schema.md)를 따릅니다.
- **프론트엔드 아키텍처:** 프론트엔드의 구조 및 개발 방식은 [프론트엔드 아키텍처 설계서](mdc:docs/frontend_architecture.md)를 따릅니다.

- **API 명세:** 백엔드와 프론트엔드 간의 모든 통신은 [API 명세서](mdc:docs/api_specification.md)를 준수해야 합니다.
- **DB 스키마:** 모든 데이터 저장 구조는 [데이터베이스 스키마 설계서](mdc:docs/database_schema.md)를 따릅니다.
- **프론트엔드 아키텍처:** 프론트엔드의 구조 및 개발 방식은 [프론트엔드 아키텍처 설계서](mdc:docs/frontend_architecture.md)를 따릅니다.
